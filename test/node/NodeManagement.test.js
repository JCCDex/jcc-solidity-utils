const NodeManagemenet = artifacts.require('NodeManagemenet');

contract('NodeManagemenet', () => {
  it('get node', async () => {
    let inst = await NodeManagemenet.new();
    let nodes = await inst.getNode();
    assert.deepEqual(nodes.jingtumNodes, []);

    await inst.updateJingtumNodes(["0x68747470733a2f2f73726a65303731716465773233312e6a63636465782e636e"])
    nodes = await inst.getNode();
    assert.deepEqual(nodes.jingtumNodes, ["0x68747470733a2f2f73726a65303731716465773233312e6a63636465782e636e"]);
    await inst.insertJingtumNodes(["0x68747470733a2f2f73726a65303731716465773233312e6a63636465782e636e"])
    nodes = await inst.getNode();
    assert.deepEqual(nodes.jingtumNodes, ["0x68747470733a2f2f73726a65303731716465773233312e6a63636465782e636e", "0x68747470733a2f2f73726a65303731716465773233312e6a63636465782e636e"]);

    await inst.updateMoacNodes(["0x68747470733a2f2f73726a65303731716465773233312e6a63636465782e636e"])
    nodes = await inst.getNode();
    assert.deepEqual(nodes.moacNodes, ["0x68747470733a2f2f73726a65303731716465773233312e6a63636465782e636e"]);
    await inst.insertMoacNodes(["0x68747470733a2f2f73726a65303731716465773233312e6a63636465782e636e"])
    nodes = await inst.getNode();
    assert.deepEqual(nodes.moacNodes, ["0x68747470733a2f2f73726a65303731716465773233312e6a63636465782e636e", "0x68747470733a2f2f73726a65303731716465773233312e6a63636465782e636e"]);
    
    await inst.updateInfoNodes(["0x68747470733a2f2f73726a65303731716465773233312e6a63636465782e636e"])
    nodes = await inst.getNode();
    assert.deepEqual(nodes.infoNodes, ["0x68747470733a2f2f73726a65303731716465773233312e6a63636465782e636e"]);
    await inst.insertInfoNodes(["0x68747470733a2f2f73726a65303731716465773233312e6a63636465782e636e"])
    nodes = await inst.getNode();
    assert.deepEqual(nodes.infoNodes, ["0x68747470733a2f2f73726a65303731716465773233312e6a63636465782e636e", "0x68747470733a2f2f73726a65303731716465773233312e6a63636465782e636e"]);
    
    await inst.updateEthereumNodes(["0x68747470733a2f2f73726a65303731716465773233312e6a63636465782e636e"])
    nodes = await inst.getNode();
    assert.deepEqual(nodes.ethereumNodes, ["0x68747470733a2f2f73726a65303731716465773233312e6a63636465782e636e"]);
    await inst.insertEthereumNodes(["0x68747470733a2f2f73726a65303731716465773233312e6a63636465782e636e"])
    nodes = await inst.getNode();
    assert.deepEqual(nodes.ethereumNodes, ["0x68747470733a2f2f73726a65303731716465773233312e6a63636465782e636e", "0x68747470733a2f2f73726a65303731716465773233312e6a63636465782e636e"]);
    
    await inst.updateExplorerNodes(["0x68747470733a2f2f73726a65303731716465773233312e6a63636465782e636e"])
    nodes = await inst.getNode();
    assert.deepEqual(nodes.explorerNodes, ["0x68747470733a2f2f73726a65303731716465773233312e6a63636465782e636e"]);
    await inst.insertExplorerNodes(["0x68747470733a2f2f73726a65303731716465773233312e6a63636465782e636e"])
    nodes = await inst.getNode();
    assert.deepEqual(nodes.explorerNodes, ["0x68747470733a2f2f73726a65303731716465773233312e6a63636465782e636e", "0x68747470733a2f2f73726a65303731716465773233312e6a63636465782e636e"]);
    

  });
});